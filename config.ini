[fastcgi]
; Listen to TCP port (tcp) or UNIX socket (unix)
mode = tcp
; TCP only: IP address (range) to listen to
listen = 127.0.0.1
; TCP only: TCP port to listen on
port = 8000
; UNIX only: path to the socket
path = /etc/qsf/sock.d/qsf.sock
; UNIX only: permissions of the socket (unsigned 32 bit integer) (strtol(mode, 0, 8))
; leave empty for no permission set / 0xffffffffUL
; permissions = 0xffffffffUL ; example from libfastcgipp
;permissions = 0600
permissions =
; UNIX only: owner of the socket
owner = tinyp
; UNIX only: group of the socket
group = tinyp

[privileges]
; user QSF should run as (if started as root)
user = tinyp
; group QSF should run as (if started as root)
group = tinyp

[post]
; Maximum post size (in kiB)
max_size = 5
; Access to raw post data (requires copying) always possible (always), never (never), or just for non-standard
; content types (nonstandard), i.e., all except application/x-www-form-urlencoded and multipart/form-data
raw_access = nonstandard

[system]
; Fixed number of threads (fixed) or relative to std::thread::hardware_concurrency (hardware)
concurrency = hardware
; number of threads, absolute (fixed concurrency) or relative (threads*hardware_concurrency) (double)
threads = 1.0

[application]
; Path to application to load
path = ./cmake-build-debug/libqsftest.so

[session]
; Name of the session cookie
cookie_name = SESSION
; If session cookies may also be sent via insecure (HTTP) connections, set this to off
cookie_secure = on
; Set this to off if httpOnly attribute should not be set in the cookie (making it modifiable through JS, danger of XSS)
; (not yet supported by all browsers, but at least protects those with a compatible browser)
cookie_httponly = on
; If set to lax, cookie may be sent with some cross-site GET requests, if off, cookie may be sent with all XS requests
; strict is recommended, sending the cookie with XS requests is then prohibited (not yet supported by all browsers)
cookie_samesite = strict
; Session duration in seconds
duration = 1440
; Automatically start a session when the user connects? (on/off)
autostart = off
